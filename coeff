#! /bin/sh
#
# Copyright (c) 2014 Chris Hettrick <chris@structfoo.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# coeff - compare sensor coefficients between calibration
#	  certificates and instrument log captures.
#
# usage: coeff [directory]
#

umask 077

export LC_ALL='C'

COEFF=/usr/local/share/coeff/coeff.lst

CALIBCOEFF=`mktemp -t calibcoeff.XXXXXXXXXX` || exit 1
CAPTURECOEFF=`mktemp -t capturecoeff.XXXXXXXXXX` || exit 1
OUT=`mktemp -t out.XXXXXXXXXX` || exit 1
TMP=`mktemp -t tmp.XXXXXXXXXX` || exit 1
TMPTMP=`mktemp -t tmptmp.XXXXXXXXXX` || exit 1

trap "exit 1" HUP INT PIPE QUIT TERM
trap "rm -f $CALIBCOEFF $CAPTURECOEFF $OUT $TMP $TMPTMP" EXIT

find_drives() {
	if [ "X$1" = "X" ]; then
		# Only a single CD or USB stick at a time.
		mount | grep -E "cd9660|iso9660|udf|fat|msdos" |
		    cut -d " " -f 3 > $TMP
		case X"$(cat $TMP | wc -l | tr -cd "[:digit:]")" in
			X1) ROOTDIR=$(cat $TMP);;
			X0) echo "$0: Cannot find mounted drive." >&2; exit 1;;
			X*) echo "$0: Too many drives mounted." >&2; exit 1;;
		esac
	else
		ROOTDIR=$1;	
	fi
}

# Find sensor serial numbers and calibration dates from capture files.
find_sn_caldate_capture() {
	# Find all log capture text files.
	find "$ROOTDIR"/* -type f -name \*.txt > $TMP
	while read f
	do
		# Grab all sensor serial numbers from capture files.
		grep "SensorSN" "$f" |
		    awk -F[=] '{ print $2 }' >> $CAPTURECOEFF
		# Grab all sensor cal dates, and fix up the formatting.
		grep "CalDate" "$f" |
		    awk -F[=] '{ print $2 }' |
		    awk -F[/] '{ print $2"/"$1"/20"$3 }' |
		    awk '{ gsub ("^0*", "", $0); \
			gsub ("/0*", "/", $0); print }' >> $CAPTURECOEFF
		# Grab the sensor coefficients from capture files.
		grep -I '^[CPT]*[U]*[[:alpha:]]=' "$f" >> $CAPTURECOEFF
	done < $TMP
	# Check if any serial numbers, cal dates, or coefficients were found.
	if (! test -s $CAPTURECOEFF); then
		echo "$0: No capture file found." >&2; exit 1;
	fi
}

# Find calibration and conformity files.
find_cal_files() {
	find "$ROOTDIR"/* -path "$ROOTDIR"/*/Software -prune -o -path \
	    "$ROOTDIR"/*/Manual* -prune -o -type f -name \*.pdf -print > $TMP
}

# Find record fields in calibration and conformity files.
find_records() {
	while read f
	do
		# Search through the pdfs for records.
		grep -a "NLCUSTRECORD" "$f" |
		    awk -F[\(\)] '{ print $2, $6 }' |
		    sort |
		    # Match up found records with coeff.lst.
		    join $COEFF - |
		    # Remove the NLCUSTRECORD fields; leave the records.
		    cut -d " " -f 2- |
		    sort >> $TMPTMP
	done < $TMP
	# Strip out currently not needed data.
	grep -E 'Asset|Coeff|Calibration Date' $TMPTMP |
	    awk -F' ' '{ print $NF }' > $CALIBCOEFF
	# Check if any serial numbers, cal dates, or coefficients were found.
	if (! test -s $CALIBCOEFF); then
		echo "$0: No calibration file found." >&2; exit 1;
	fi
}

# Compare calibration coefficients between pdf and capture files.
diff_coeff() {
	# Fix up the formatting for floating point zero.
	sed -r s/0.000000E-01/0.000000E+0/g $CAPTURECOEFF |
	    # Remove DOS line endings; leave UNIX line ending.
	    tr -d '\r' |
	    # Remove the leading zero of an exponent less than ten.
	    sed -r 's/(E[-+])0([0-9])/\1\2/g' |
	    # Replace the `=' sign between designator and value with a space.
	    awk -F'=' '{ print $1 " " $NF }' |
	    # Remove the designators completely.
	    awk -F' ' '{ print $NF }' > $TMPTMP
	cat $TMPTMP > $CAPTURECOEFF

	# Remove zeros from the temp calibration file.
	grep -v "0.000000E+0" $CALIBCOEFF |
	    sort > $TMPTMP
	cat $TMPTMP > $CALIBCOEFF
	# Remove zeros from the temp capture file.
	grep -v "0.000000E+0" $CAPTURECOEFF |
	    sort > $TMPTMP
	cat $TMPTMP > $CAPTURECOEFF

	# Compare the data between the cal temp file and the capture temp file.
	sdiff -s -w 30 $CALIBCOEFF $CAPTURECOEFF > $OUT
}

coeff_match() {
	# Check if there are any differences between the pdfs and the captures.
	if (test -s $OUT); then
		cat $OUT;
		echo; echo "Sensor coefficients do not match.";
	else
		echo; echo "Sensor coefficients match.";
	fi
}

find_drives "$1"
find_sn_caldate_capture
find_cal_files
find_records
diff_coeff
coeff_match
